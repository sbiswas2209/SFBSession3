{"version":3,"file":"utilities.spec.js","sourceRoot":"","sources":["../../test/utilities.spec.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;;GAeG;;AAEH,4CAIsB;AACtB,mCAA0C;AAE1C,QAAQ,CAAC,WAAW,EAAE,GAAG,EAAE;IAEvB,MAAM,cAAc,GAAG,gBAAgB,CAAC;IACxC,MAAM,8BAA8B,GAAG,+CAA+C,CAAC;IACvF,MAAM,2BAA2B,GAAG,4CAA4C,CAAC;IAEjF,EAAE,CAAC,0CAA0C,EAAE,GAAG,EAAE;QAChD,MAAM,MAAM,GAAG,wCAA4B,CAAC,8BAA8B,CAAC,CAAC;QAE5E,eAAM,CAAC,KAAK,CAAC,MAAM,EAAE,cAAc,CAAC,CAAC;IACzC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,uCAAuC,EAAE,GAAG,EAAE;QAC7C,MAAM,MAAM,GAAG,wCAA4B,CAAC,2BAA2B,CAAC,CAAC;QAEzE,eAAM,CAAC,KAAK,CAAC,MAAM,EAAE,cAAc,CAAC,CAAC;IACzC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,sCAAsC,EAAE,KAAK,IAAI,EAAE;QAClD,MAAM,MAAM,GAAG,MAAM,oCAAwB,CAAC,8BAA8B,CAAC,CAAC;QAE9E,eAAM,CAAC,KAAK,CAAC,MAAM,EAAE,cAAc,CAAC,CAAC;IACzC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,mCAAmC,EAAE,KAAK,IAAI,EAAE;QAC/C,MAAM,MAAM,GAAG,MAAM,oCAAwB,CAAC,2BAA2B,CAAC,CAAC;QAE3E,eAAM,CAAC,KAAK,CAAC,MAAM,EAAE,cAAc,CAAC,CAAC;IACzC,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,8BAA8B,EAAE,GAAG,EAAE;QAC1C,EAAE,CAAC,uBAAuB,EAAE,GAAG,EAAE;YAC7B,MAAM,MAAM,GAAG,wCAA4B,CAAC,6BAA6B,CAAC,CAAC;YAE3E,eAAM,CAAC,KAAK,CAAC,MAAM,EAAE,2BAA2B,CAAC,CAAC;QACtD,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,uBAAuB,EAAE,GAAG,EAAE;YAC7B,MAAM,MAAM,GAAG,wCAA4B,CAAC,6BAA6B,CAAC,CAAC;YAE3E,eAAM,CAAC,KAAK,CAAC,MAAM,EAAE,2BAA2B,CAAC,CAAC;QACtD,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,qBAAqB,EAAE,GAAG,EAAE;YAC3B,MAAM,MAAM,GAAG,wCAA4B,CAAC,mCAAmC,CAAC,CAAC;YAEjF,eAAM,CAAC,KAAK,CAAC,MAAM,EAAE,2BAA2B,CAAC,CAAC;QACtD,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,qCAAqC,EAAE,GAAG,EAAE;YAC3C,MAAM,MAAM,GAAG,wCAA4B,CAAC,0CAA0C,CAAC,CAAC;YAExF,eAAM,CAAC,KAAK,CAAC,MAAM,EAAE,qCAAqC,CAAC,CAAC;QAChE,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC","sourcesContent":["/* \n * Copyright 2018 Amazon.com, Inc. and its affiliates. All Rights Reserved.\n *\n * SPDX-License-Identifier: LicenseRef-.amazon.com.-AmznSL-1.0\n *\n * Licensed under the Amazon Software License (the \"License\").\n * You may not use this file except in compliance with the License.\n * A copy of the License is located at\n *\n *   http://aws.amazon.com/asl/\n *\n * or in the \"license\" file accompanying this file. This file is distributed\n * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n * express or implied. See the License for the specific language governing\n * permissions and limitations under the License.\n */\n\nimport {\n    readUtf8FileExcludingBom,\n    readUtf8FileExcludingBomSync,\n    sanitizeCommandLineParameter\n} from '../utilities';\nimport { strict as assert } from 'assert';\n\ndescribe('utilities', () => {\n\n    const ExpectedOutput = 'this is a test';\n    const TestReadUtf8FileWithoutBomPath = 'test/testFiles/testReadUtf8FileWithoutBom.txt';\n    const TestReadUtf8FileWithBomPath = 'test/testFiles/testReadUtf8FileWithBom.txt';\n\n    it('readUtf8FileExcludingBomSync without bom', () => {\n        const output = readUtf8FileExcludingBomSync(TestReadUtf8FileWithoutBomPath);\n\n        assert.equal(output, ExpectedOutput);\n    });\n\n    it('readUtf8FileExcludingBomSync with bom', () => {\n        const output = readUtf8FileExcludingBomSync(TestReadUtf8FileWithBomPath);\n\n        assert.equal(output, ExpectedOutput);\n    });\n\n    it('readUtf8FileExcludingBom without bom', async () => {\n        const output = await readUtf8FileExcludingBom(TestReadUtf8FileWithoutBomPath);\n\n        assert.equal(output, ExpectedOutput);\n    });\n\n    it('readUtf8FileExcludingBom with bom', async () => {\n        const output = await readUtf8FileExcludingBom(TestReadUtf8FileWithBomPath);\n\n        assert.equal(output, ExpectedOutput);\n    });\n\n    describe('sanitizeCommandLineParameter', () => {\n        it('removes double quotes', () => {\n            const actual = sanitizeCommandLineParameter('fake\" && rm -rf / && echo \"');\n\n            assert.equal(actual, 'fake && rm -rf / && echo ');\n        });\n\n        it('removes single quotes', () => {\n            const actual = sanitizeCommandLineParameter(\"fake' && rm -rf / && echo '\");\n\n            assert.equal(actual, 'fake && rm -rf / && echo ');\n        });\n\n        it('removes line breaks', () => {\n            const actual = sanitizeCommandLineParameter('fake\\\\\\r\\n\" && rm -rf / && echo \"');\n\n            assert.equal(actual, 'fake && rm -rf / && echo ');\n        });\n\n        it('removes environment variable syntax', () => {\n            const actual = sanitizeCommandLineParameter('fake\" && echo ${MY_SECRET_CREDENTIALS} \"');\n\n            assert.equal(actual, 'fake && echo MY_SECRET_CREDENTIALS ');\n        });\n    });\n});\n"]}