"use strict";
/*
 * Copyright 2018 Amazon.com, Inc. and its affiliates. All Rights Reserved.
 *
 * SPDX-License-Identifier: LicenseRef-.amazon.com.-AmznSL-1.0
 *
 * Licensed under the Amazon Software License (the "License").
 * You may not use this file except in compliance with the License.
 * A copy of the License is located at
 *
 *   http://aws.amazon.com/asl/
 *
 * or in the "license" file accompanying this file. This file is distributed
 * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
 * express or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ABCExtension = exports.SFBExtensions = exports.SFBExtension = void 0;
/*
 SFB-f (Alexa Skill Flow Builder Framework)
 
 Collection of utility and driver functionality for Alexa Branching Content Framework.
*/
const SFBExtensions = __importStar(require("./extensions/SFBExtension"));
exports.SFBExtension = SFBExtensions;
exports.SFBExtensions = SFBExtensions;
exports.ABCExtension = SFBExtensions;
var driver_1 = require("./driver/driver");
Object.defineProperty(exports, "SFBDriver", { enumerable: true, get: function () { return driver_1.SFBDriver; } });
var importer_1 = require("./importer/importer");
Object.defineProperty(exports, "SFBImporter", { enumerable: true, get: function () { return importer_1.SFBImporter; } });
var storyMetadata_1 = require("./story/storyMetadata");
Object.defineProperty(exports, "InstructionType", { enumerable: true, get: function () { return storyMetadata_1.InstructionType; } });
var instructionBuilder_1 = require("./story/instructionBuilder");
Object.defineProperty(exports, "InstructionBuilder", { enumerable: true, get: function () { return instructionBuilder_1.InstructionBuilder; } });
var storyStateHelper_1 = require("./driver/storyStateHelper");
Object.defineProperty(exports, "StoryStateHelper", { enumerable: true, get: function () { return storyStateHelper_1.StoryStateHelper; } });
var driverEntity_1 = require("./driver/driverEntity");
Object.defineProperty(exports, "AudioBlendOption", { enumerable: true, get: function () { return driverEntity_1.AudioBlendOption; } });
Object.defineProperty(exports, "BuiltInUserInput", { enumerable: true, get: function () { return driverEntity_1.BuiltInUserInput; } });
var PlayStage_1 = require("./driver/PlayStage");
Object.defineProperty(exports, "PlayStage", { enumerable: true, get: function () { return PlayStage_1.PlayStage; } });
var storyAccessor_1 = require("./story/storyAccessor");
Object.defineProperty(exports, "StoryAccessor", { enumerable: true, get: function () { return storyAccessor_1.StoryAccessor; } });
var sourceContentHelper_1 = require("./importPlugins/sourceContentHelper");
Object.defineProperty(exports, "SourceContentHelper", { enumerable: true, get: function () { return sourceContentHelper_1.SourceContentHelper; } });
var storyMetadataHelper_1 = require("./importPlugins/storyMetadataHelper");
Object.defineProperty(exports, "StoryMetadataHelper", { enumerable: true, get: function () { return storyMetadataHelper_1.StoryMetadataHelper; } });
var userInputHelper_1 = require("./importPlugins/userInputHelper");
Object.defineProperty(exports, "UserInputHelper", { enumerable: true, get: function () { return userInputHelper_1.UserInputHelper; } });
var AudioItemUtil_1 = require("./driver/AudioItemUtil");
Object.defineProperty(exports, "AudioItemUtil", { enumerable: true, get: function () { return AudioItemUtil_1.AudioItemUtil; } });
var SFBExtension_1 = require("./extensions/SFBExtension");
Object.defineProperty(exports, "GlobalDirectionsExtension", { enumerable: true, get: function () { return SFBExtension_1.GlobalDirectionsExtension; } });
var DefaultFormatImportPlugin_1 = require("./importPlugins/DefaultFormatImportPlugin");
Object.defineProperty(exports, "DefaultFormatImportPlugin", { enumerable: true, get: function () { return DefaultFormatImportPlugin_1.DefaultFormatImportPlugin; } });
var segmenter_1 = require("./transformers/segmenter");
Object.defineProperty(exports, "Segmenter", { enumerable: true, get: function () { return segmenter_1.Segmenter; } });
Object.defineProperty(exports, "SegmentType", { enumerable: true, get: function () { return segmenter_1.SegmentType; } });
Object.defineProperty(exports, "SegmenterBuilder", { enumerable: true, get: function () { return segmenter_1.SegmenterBuilder; } });
var storyFeatureFinder_1 = require("./importPlugins/storyFeatureFinder");
Object.defineProperty(exports, "StoryFeatureFinder", { enumerable: true, get: function () { return storyFeatureFinder_1.StoryFeatureFinder; } });
var storyBlockRange_1 = require("./importPlugins/storyBlockRange");
Object.defineProperty(exports, "StoryBlockRange", { enumerable: true, get: function () { return storyBlockRange_1.StoryBlockRange; } });
var SFBContentTester_1 = require("./test/SFBContentTester");
Object.defineProperty(exports, "SFBContentTester", { enumerable: true, get: function () { return SFBContentTester_1.SFBContentTester; } });
var storyMetadata_2 = require("./story/storyMetadata");
/**
 * @deprecated use new naming convention 'SceneDirection' is renamed to 'Instruction'
 */
Object.defineProperty(exports, "SceneDirectionType", { enumerable: true, get: function () { return storyMetadata_2.InstructionType; } });
var instructionBuilder_2 = require("./story/instructionBuilder");
/**
 * @deprecated use new naming convention 'SceneDirection' is renamed to 'Instruction'
 */
Object.defineProperty(exports, "SceneDirectionBuilder", { enumerable: true, get: function () { return instructionBuilder_2.InstructionBuilder; } });
//# sourceMappingURL=index.js.map