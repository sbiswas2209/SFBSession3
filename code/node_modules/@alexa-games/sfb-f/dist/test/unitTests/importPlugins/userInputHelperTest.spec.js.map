{"version":3,"file":"userInputHelperTest.spec.js","sourceRoot":"","sources":["../../../../test/unitTests/importPlugins/userInputHelperTest.spec.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;;GAeG;;AAEH,8EAA2E;AAE3E,mCAA0C;AAE1C,QAAQ,CAAC,wBAAwB,EAAE;IAC/B,EAAE,CAAC,iCAAiC,EAAE,KAAK;QACvC,MAAM,aAAa,GAAc;YAC7B,MAAM,EAAE,WAAW;YACnB,KAAK,EAAE;gBACH;oBACI,IAAI,EAAE,UAAU;oBAChB,KAAK,EAAE,OAAO;iBACjB;aACJ;YACD,KAAK,EAAE,WAAW;SACrB,CAAC;QACF,MAAM,WAAW,GAAG,IAAI,iCAAe,CAAC,aAAa,CAAC,CAAC;QAEvD,eAAM,CAAC,KAAK,CAAC,WAAW,CAAC,cAAc,EAAE,EAAE,aAAa,CAAC,MAAM,CAAC,CAAC;QACjE,eAAM,CAAC,SAAS,CAAC,WAAW,CAAC,aAAa,EAAE,EAAE,aAAa,CAAC,KAAK,CAAC,CAAC;QACnE,eAAM,CAAC,KAAK,CAAC,WAAW,CAAC,aAAa,EAAE,EAAE,aAAa,CAAC,KAAK,CAAC,CAAC;QAC/D,eAAM,CAAC,KAAK,CAAC,WAAW,CAAC,eAAe,EAAE,EAAE,aAAa,CAAC,YAAY,CAAC,CAAC;QACxE,eAAM,CAAC,SAAS,CAAC,WAAW,CAAC,YAAY,EAAE,EAAE,aAAa,CAAC,CAAC;QAE5D,MAAM,SAAS,GAAW,YAAY,CAAC;QACvC,MAAM,QAAQ,GAAW,CAAC;gBACtB,IAAI,EAAE,aAAa;gBACnB,KAAK,EAAE,WAAW;aACrB,CAAC,CAAC;QACH,MAAM,QAAQ,GAAW,eAAe,CAAC;QACzC,MAAM,UAAU,GAAS;YACrB,IAAI,EAAE,gBAAgB;YACtB,KAAK,EAAE,cAAc;SACxB,CAAA;QAED,WAAW,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;QACtC,WAAW,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;QACpC,WAAW,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;QAEpC,eAAM,CAAC,KAAK,CAAC,WAAW,CAAC,cAAc,EAAE,EAAE,SAAS,CAAC,CAAC;QACtD,eAAM,CAAC,SAAS,CAAC,WAAW,CAAC,aAAa,EAAE,EAAE,QAAQ,CAAC,CAAC;QACxD,eAAM,CAAC,KAAK,CAAC,WAAW,CAAC,aAAa,EAAE,EAAE,QAAQ,CAAC,CAAC;QAEpD,WAAW,CAAC,cAAc,EAAE,CAAC;QAC7B,eAAM,CAAC,SAAS,CAAC,WAAW,CAAC,YAAY,EAAE,EAAE,EAAE,CAAC,CAAC;QAEjD,WAAW,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,EAAE,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5D,eAAM,CAAC,SAAS,CAAC,WAAW,CAAC,aAAa,EAAE,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC;IAChE,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC","sourcesContent":["/* \n * Copyright 2018 Amazon.com, Inc. and its affiliates. All Rights Reserved.\n *\n * SPDX-License-Identifier: LicenseRef-.amazon.com.-AmznSL-1.0\n *\n * Licensed under the Amazon Software License (the \"License\").\n * You may not use this file except in compliance with the License.\n * A copy of the License is located at\n *\n *   http://aws.amazon.com/asl/\n *\n * or in the \"license\" file accompanying this file. This file is distributed\n * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n * express or implied. See the License for the specific language governing\n * permissions and limitations under the License.\n */\n\nimport { UserInputHelper } from './../../../importPlugins/userInputHelper';\nimport { UserInput, Slot } from './../../../driver/driverEntity';\nimport { strict as assert } from 'assert';\n\ndescribe(\"User Input Helper Test\", function () {\n    it(\"getters and setters sanity test\", async function () {\n        const testUserInput: UserInput = {\n            intent: \"something\",\n            slots: [\n                {\n                    name: \"slotName\",\n                    value: \"value\"\n                }\n            ],\n            value: \"raw value\"\n        };\n        const inputHelper = new UserInputHelper(testUserInput);\n\n        assert.equal(inputHelper.getInputIntent(), testUserInput.intent);\n        assert.deepEqual(inputHelper.getInputSlots(), testUserInput.slots);\n        assert.equal(inputHelper.getInputValue(), testUserInput.value);\n        assert.equal(inputHelper.getHandlerInput(), testUserInput.handlerInput);\n        assert.deepEqual(inputHelper.getUserInput(), testUserInput);\n\n        const newIntent: string = 'new intent';\n        const newSlots: Slot[] = [{\n            name: \"newSlotName\",\n            value: \"new value\"\n        }];\n        const newValue: string = \"new raw value\";\n        const addingSlot: Slot = {\n            name: \"addingSlotName\",\n            value: \"adding value\"\n        }\n\n        inputHelper.setInputIntent(newIntent);\n        inputHelper.setInputSlots(newSlots);\n        inputHelper.setInputValue(newValue);\n\n        assert.equal(inputHelper.getInputIntent(), newIntent);\n        assert.deepEqual(inputHelper.getInputSlots(), newSlots);\n        assert.equal(inputHelper.getInputValue(), newValue);\n\n        inputHelper.clearUserInput();\n        assert.deepEqual(inputHelper.getUserInput(), {});\n\n        inputHelper.addInputSlot(addingSlot.name, addingSlot.value);\n        assert.deepEqual(inputHelper.getInputSlots(), [addingSlot]);\n    });\n});"]}