"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ResourceStringsLoaders = exports.LANGUAGE_STRING_FILENAME = void 0;
const sfb_util_1 = require("@alexa-games/sfb-util");
const fs = __importStar(require("fs"));
const path = __importStar(require("path"));
exports.LANGUAGE_STRING_FILENAME = 'languageStrings.json';
class ResourceStringsLoaders {
    static loadLanguageStrings(contentSource) {
        let languageStringPath = path.join(contentSource, exports.LANGUAGE_STRING_FILENAME);
        if (fs.existsSync(languageStringPath)) {
            const data = sfb_util_1.readUtf8FileExcludingBomSync(languageStringPath);
            return JSON.parse(data);
        }
        return {};
    }
    static loadSnippets(configAccessor, locale) {
        const snippetMapFilePath = configAccessor.getSnippetMapFilePath(locale);
        if (!fs.existsSync(snippetMapFilePath)) {
            return undefined;
        }
        else {
            const data = sfb_util_1.readUtf8FileExcludingBomSync(snippetMapFilePath);
            return JSON.parse(data);
        }
    }
}
exports.ResourceStringsLoaders = ResourceStringsLoaders;
//# sourceMappingURL=ResourceStringsLoaders.js.map